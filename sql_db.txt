
CREATE DATABASE CABLINE;



CREATE TABLE subscriber_status(
    subscriber_status_id SMALLINT NOT NULL AUTO_INCREMENT,
    description VARCHAR(50),
    PRIMARY KEY(subscriber_status_id)
);

CREATE TABLE user_status(
    user_status_id SMALLINT NOT NULL AUTO_INCREMENT,
    description VARCHAR(50),
    PRIMARY KEY(user_status_id)
);

 CREATE TABLE subscribers(
    subscriber_id INT NOT NULL AUTO_INCREMENT,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    contact_phone INT,
    registration_date DATE,
    comment_ VARCHAR(255),
    subscriber_status_id SMALLINT NOT NULL,
    PRIMARY KEY(subscriber_id),
    FOREIGN KEY(subscriber_status_id) REFERENCES subscriber_status(subscriber_status_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE roles(
    role_id SMALLINT NOT NULL AUTO_INCREMENT,
    description VARCHAR(50),
    PRIMARY KEY(role_id)
);

CREATE TABLE services(
    service_id INT NOT NULL AUTO_INCREMENT,
    description VARCHAR(50),
    PRIMARY KEY(service_id)
);

CREATE TABLE users_(
    user_id INT NOT NULL AUTO_INCREMENT,
    role_id SMALLINT NOT NULL,
    user_status_id SMALLINT NOT NULL,
    user_name VARCHAR(50),
    password_ VARCHAR(50),
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    contact_phone INT,
    registration_date DATE,
    PRIMARY KEY(user_id),
    FOREIGN KEY(role_id) REFERENCES roles(role_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(user_status_id) REFERENCES user_status(user_status_id) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE state(
    state_id SMALLINT NOT NULL AUTO_INCREMENT,
    description VARCHAR(50),
    PRIMARY KEY(state_id)
);

CREATE TABLE ahk(
    ahk_id INT NOT NULL AUTO_INCREMENT,
    ahk_num VARCHAR(50),
    PRIMARY KEY(ahk_id)
);

CREATE TABLE saves(
    safe_id INT NOT NULL AUTO_INCREMENT,
    ahk_id INT NOT NULL,
    street VARCHAR(50),
    alley VARCHAR(50),
    dead_end VARCHAR(50),
    building VARCHAR(50),
    entrance VARCHAR(50),
    PRIMARY KEY(safe_id),
    FOREIGN KEY(ahk_id) REFERENCES ahk(ahk_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE boxes(
    box_id INT NOT NULL AUTO_INCREMENT,
    safe_id INT NOT NULL,
    box_num VARCHAR(50),
    PRIMARY KEY(box_id),
    FOREIGN KEY(safe_id) REFERENCES saves(safe_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE shunts(
    shunt_id INT NOT NULL AUTO_INCREMENT,
    safe_id INT NOT NULL,
    shunt_num VARCHAR(50),
    PRIMARY KEY(shunt_id),
    FOREIGN KEY(safe_id) REFERENCES saves(safe_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE rods(
    rod_id INT NOT NULL AUTO_INCREMENT,
    shunt_id INT NOT NULL,
    box_id INT NOT NULL,
    state_id SMALLINT NOT NULL,
    rod_num VARCHAR(50),
    shunt_pair_num VARCHAR(50),
    box_pair_num VARCHAR(50),
    PRIMARY KEY(rod_id),
    FOREIGN KEY(shunt_id) REFERENCES shunts(shunt_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(box_id) REFERENCES boxes(box_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(state_id) REFERENCES state(state_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE phone_numbers(
    phone_number_id INT NOT NULL AUTO_INCREMENT,
    rod_id INT NOT NULL,
    subscriber_id INT NOT NULL,
    phone_number INT,
    street VARCHAR(50),
    alley VARCHAR(50),
    dead_end VARCHAR(50),
    building VARCHAR(50),
    entrance VARCHAR(50),
    state_id SMALLINT NOT NULL,
    PRIMARY KEY(phone_number_id),
    FOREIGN KEY(rod_id) REFERENCES rods(rod_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(subscriber_id) REFERENCES subscribers(subscriber_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(state_id) REFERENCES state(state_id) ON DELETE CASCADE ON UPDATE CASCADE
); 


CREATE TABLE status_service_process(
    status_service_process_id SMALLINT NOT NULL AUTO_INCREMENT,
    description VARCHAR(255),
    PRIMARY KEY(status_service_process_id)
);



CREATE TABLE service_process(
    service_process_id  INT NOT NULL AUTO_INCREMENT,
    service_id INT NOT NULL,
    status_service_process_id SMALLINT NOT NULL,
    user_id INT NOT NULL,
    subscriber_id INT NOT NULL,
    comment_ VARCHAR(255),
    PRIMARY KEY(service_process_id),
    FOREIGN KEY(service_id) REFERENCES services(service_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(status_service_process_id) REFERENCES status_service_process(status_service_process_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(user_id) REFERENCES users_(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(subscriber_id) REFERENCES subscribers(subscriber_id) ON DELETE CASCADE ON UPDATE CASCADE
);  



INSERT INTO roles (description)
	VALUES
    ('Administrator'),
    ('User'),
    ('Fitter');

INSERT INTO status_service_process(description)
	VALUES
    ('Completed'),
    ('In process'),
    ('Denied');

INSERT INTO subscriber_status(description)
	VALUES
    ('Active'),
    ('Frozen'),
    ('Inactive');

INSERT INTO user_status(description)
	VALUES
    ('Accessible'),
    ('Temporary Inaccessible'),
    ('Inaccessible');

INSERT INTO services(description)
	VALUES
    ('Installation'),
    ('Reinstallation'),
    ('Rename'),
    ('Number change'),
    ('Number removal'),
    ('Number recovery'),
    ('Box check');

INSERT INTO state(description)
	VALUES
    ('Busy'),
    ('Free'),
    ('Crashed');



INSERT INTO subscribers(first_name, last_name, contact_phone, registration_date, comment_,  subscriber_status_id)
	VALUES
    (SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 10), (SELECT FLOOR(100000+RAND()*900000)), CURRENT_DATE - INTERVAL FLOOR(RAND() * 100) DAY, SUBSTRING(MD5(RAND()) FROM 1 FOR 20), (SELECT FLOOR(1+RAND()*3))),
    (SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 10), (SELECT FLOOR(100000+RAND()*900000)), CURRENT_DATE - INTERVAL FLOOR(RAND() * 100) DAY, SUBSTRING(MD5(RAND()) FROM 1 FOR 20), (SELECT FLOOR(1+RAND()*3))),
    (SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 10), (SELECT FLOOR(100000+RAND()*900000)), CURRENT_DATE - INTERVAL FLOOR(RAND() * 100) DAY, SUBSTRING(MD5(RAND()) FROM 1 FOR 20), (SELECT FLOOR(1+RAND()*3))),
    (SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 10), (SELECT FLOOR(100000+RAND()*900000)), CURRENT_DATE - INTERVAL FLOOR(RAND() * 100) DAY, SUBSTRING(MD5(RAND()) FROM 1 FOR 20), (SELECT FLOOR(1+RAND()*3))),
    (SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 10), (SELECT FLOOR(100000+RAND()*900000)), CURRENT_DATE - INTERVAL FLOOR(RAND() * 100) DAY, SUBSTRING(MD5(RAND()) FROM 1 FOR 20), (SELECT FLOOR(1+RAND()*3)));



INSERT INTO users_(role_id, user_status_id, user_name, password_, first_name, last_name, contact_phone, registration_date)
	VALUES
    ((SELECT FLOOR(1+RAND()*3)), (SELECT FLOOR(1+RAND()*3)), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 8 FOR 12), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), (SELECT FLOOR(100000+RAND()*900000)), CURRENT_DATE - INTERVAL FLOOR(RAND() * 100) DAY),
    ((SELECT FLOOR(1+RAND()*3)), (SELECT FLOOR(1+RAND()*3)), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 8 FOR 12), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), (SELECT FLOOR(100000+RAND()*900000)), CURRENT_DATE - INTERVAL FLOOR(RAND() * 100) DAY),
    ((SELECT FLOOR(1+RAND()*3)), (SELECT FLOOR(1+RAND()*3)), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 8 FOR 12), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), (SELECT FLOOR(100000+RAND()*900000)), CURRENT_DATE - INTERVAL FLOOR(RAND() * 100) DAY),
    ((SELECT FLOOR(1+RAND()*3)), (SELECT FLOOR(1+RAND()*3)), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 8 FOR 12), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), (SELECT FLOOR(100000+RAND()*900000)), CURRENT_DATE - INTERVAL FLOOR(RAND() * 100) DAY),
    ((SELECT FLOOR(1+RAND()*3)), (SELECT FLOOR(1+RAND()*3)), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 8 FOR 12), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), (SELECT FLOOR(100000+RAND()*900000)), CURRENT_DATE - INTERVAL FLOOR(RAND() * 100) DAY);



INSERT INTO ahk(ahk_num)
	VALUES
    (SUBSTRING(MD5(RAND()) FROM 2 FOR 5)),
    (SUBSTRING(MD5(RAND()) FROM 2 FOR 5)),
    (SUBSTRING(MD5(RAND()) FROM 2 FOR 5)),
    (SUBSTRING(MD5(RAND()) FROM 2 FOR 5)),
    (SUBSTRING(MD5(RAND()) FROM 2 FOR 5));


INSERT INTO saves(ahk_id, street, alley, dead_end, building, entrance)
	VALUES
    ((SELECT FLOOR(1+RAND()*5)), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 1 FOR 3),SUBSTRING(MD5(RAND()) FROM 1 FOR 2)),
    ((SELECT FLOOR(1+RAND()*5)), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 1 FOR 3),SUBSTRING(MD5(RAND()) FROM 1 FOR 2)),
    ((SELECT FLOOR(1+RAND()*5)), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 1 FOR 3),SUBSTRING(MD5(RAND()) FROM 1 FOR 2)),
    ((SELECT FLOOR(1+RAND()*5)), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 1 FOR 3),SUBSTRING(MD5(RAND()) FROM 1 FOR 2)),
    ((SELECT FLOOR(1+RAND()*5)), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 1 FOR 3),SUBSTRING(MD5(RAND()) FROM 1 FOR 2));


INSERT INTO boxes(safe_id, box_num)
	VALUES
    ((SELECT FLOOR(1+RAND()*5)),SUBSTRING(MD5(RAND()) FROM 2 FOR 5)),
    ((SELECT FLOOR(1+RAND()*5)),SUBSTRING(MD5(RAND()) FROM 2 FOR 5)),
    ((SELECT FLOOR(1+RAND()*5)),SUBSTRING(MD5(RAND()) FROM 2 FOR 5)),
    ((SELECT FLOOR(1+RAND()*5)),SUBSTRING(MD5(RAND()) FROM 2 FOR 5)),
    ((SELECT FLOOR(1+RAND()*5)),SUBSTRING(MD5(RAND()) FROM 2 FOR 5));

INSERT INTO shunts(safe_id, shunt_num)
	VALUES
    ((SELECT FLOOR(1+RAND()*5)),SUBSTRING(MD5(RAND()) FROM 2 FOR 5)),
    ((SELECT FLOOR(1+RAND()*5)),SUBSTRING(MD5(RAND()) FROM 2 FOR 5)),
    ((SELECT FLOOR(1+RAND()*5)),SUBSTRING(MD5(RAND()) FROM 2 FOR 5)),
    ((SELECT FLOOR(1+RAND()*5)),SUBSTRING(MD5(RAND()) FROM 2 FOR 5)),
    ((SELECT FLOOR(1+RAND()*5)),SUBSTRING(MD5(RAND()) FROM 2 FOR 5));


INSERT INTO rods(shunt_id, box_id, state_id,  rod_num, shunt_pair_num, box_pair_num)
	VALUES
    ((SELECT FLOOR(1+RAND()*5)),(SELECT FLOOR(1+RAND()*5)),(SELECT FLOOR(1+RAND()*3)), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 2 FOR 3),SUBSTRING(MD5(RAND()) FROM 2 FOR 3)),
   ((SELECT FLOOR(1+RAND()*5)),(SELECT FLOOR(1+RAND()*5)),(SELECT FLOOR(1+RAND()*3)), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 2 FOR 3),SUBSTRING(MD5(RAND()) FROM 2 FOR 3)),
   ((SELECT FLOOR(1+RAND()*5)),(SELECT FLOOR(1+RAND()*5)),(SELECT FLOOR(1+RAND()*3)), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 2 FOR 3),SUBSTRING(MD5(RAND()) FROM 2 FOR 3)),
   ((SELECT FLOOR(1+RAND()*5)),(SELECT FLOOR(1+RAND()*5)),(SELECT FLOOR(1+RAND()*3)), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 2 FOR 3),SUBSTRING(MD5(RAND()) FROM 2 FOR 3)),
   ((SELECT FLOOR(1+RAND()*5)),(SELECT FLOOR(1+RAND()*5)),(SELECT FLOOR(1+RAND()*3)), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 2 FOR 3),SUBSTRING(MD5(RAND()) FROM 2 FOR 3));



INSERT INTO phone_numbers(rod_id, subscriber_id, phone_number, street, alley, dead_end, building, entrance, state_id)
	VALUES
    ((SELECT FLOOR(1+RAND()*5)),  (SELECT FLOOR(1+RAND()*5)), (SELECT FLOOR(100000+RAND()*900000)),  SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 1 FOR 3),SUBSTRING(MD5(RAND()) FROM 1 FOR 2), (SELECT FLOOR(1+RAND()*3))),
    ((SELECT FLOOR(1+RAND()*5)),  (SELECT FLOOR(1+RAND()*5)), (SELECT FLOOR(100000+RAND()*900000)),  SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 1 FOR 3),SUBSTRING(MD5(RAND()) FROM 1 FOR 2), (SELECT FLOOR(1+RAND()*3))),
    ((SELECT FLOOR(1+RAND()*5)),  (SELECT FLOOR(1+RAND()*5)), (SELECT FLOOR(100000+RAND()*900000)),  SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 1 FOR 3),SUBSTRING(MD5(RAND()) FROM 1 FOR 2), (SELECT FLOOR(1+RAND()*3))),
    ((SELECT FLOOR(1+RAND()*5)),  (SELECT FLOOR(1+RAND()*5)), (SELECT FLOOR(100000+RAND()*900000)),  SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 1 FOR 3),SUBSTRING(MD5(RAND()) FROM 1 FOR 2), (SELECT FLOOR(1+RAND()*3))),
    ((SELECT FLOOR(1+RAND()*5)),  (SELECT FLOOR(1+RAND()*5)), (SELECT FLOOR(100000+RAND()*900000)),  SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 5 FOR 7), SUBSTRING(MD5(RAND()) FROM 2 FOR 5), SUBSTRING(MD5(RAND()) FROM 1 FOR 3),SUBSTRING(MD5(RAND()) FROM 1 FOR 2), (SELECT FLOOR(1+RAND()*3)));



INSERT INTO service_process(service_id, status_service_process_id, user_id,  subscriber_id, comment_)
	VALUES
    ((SELECT FLOOR(1+RAND()*7)), (SELECT FLOOR(1+RAND()*3)), (SELECT FLOOR(1+RAND()*5)), (SELECT FLOOR(1+RAND()*5)), SUBSTRING(MD5(RAND()) FROM 1 FOR 20)),
    ((SELECT FLOOR(1+RAND()*7)), (SELECT FLOOR(1+RAND()*3)), (SELECT FLOOR(1+RAND()*5)), (SELECT FLOOR(1+RAND()*5)), SUBSTRING(MD5(RAND()) FROM 1 FOR 20)),
    ((SELECT FLOOR(1+RAND()*7)), (SELECT FLOOR(1+RAND()*3)), (SELECT FLOOR(1+RAND()*5)), (SELECT FLOOR(1+RAND()*5)), SUBSTRING(MD5(RAND()) FROM 1 FOR 20)),
    ((SELECT FLOOR(1+RAND()*7)), (SELECT FLOOR(1+RAND()*3)), (SELECT FLOOR(1+RAND()*5)), (SELECT FLOOR(1+RAND()*5)), SUBSTRING(MD5(RAND()) FROM 1 FOR 20)),
    ((SELECT FLOOR(1+RAND()*7)), (SELECT FLOOR(1+RAND()*3)), (SELECT FLOOR(1+RAND()*5)), (SELECT FLOOR(1+RAND()*5)), SUBSTRING(MD5(RAND()) FROM 1 FOR 20));

